// time webppl generics-ais-priorOnly.wppl --require utils --require webppl-json 3 1

// modelName: pragmatic, pragmatic_unlifted, literal, lit_thetaPrior

// penultimate argument is the semantics
// uncertain = uncertain threshold
// fixed = fixed threshold at lowest threshold value

var arguments = process.argv
var numberOfComponents = utils.wpParseFloat(arguments[arguments.length - 2])
var iter = arguments[arguments.length - 1]

var priorFilePrefix = "prior-3",
    // priorFilePrefix = "prior-manipulation-3",
    interpretationFilePrefix = "interpretation-6",
    endorsementFilePrefix = "endorsement-1";

// expt 2: measured priors
var d_prior = readDataFile("expt1a-prior"),
    d_prior_catch = readCatchFile("expt1a-prior"),
    d_prior_subj = readSubjFile("expt1a-prior"),
    d_interpretation = readDataFile("expt1b-interpretation"),
    d_interpretation_catch = readCatchFile("expt1b-interpretation"),
    d_interpretation_subj = readSubjFile("expt1b-interpretation");
    // d_endorsement = readDataFile("endorsement", endorsementFilePrefix),
    // d_endorsement_catch = readCatchFile("endorsement", endorsementFilePrefix),
    // d_endorsement_subj = readSubjFile("endorsement", endorsementFilePrefix);

// expt 3: Prior manipulation
// var d_prior = readDataFile("prior-manipulation", priorFilePrefix),
//     d_prior_catch = readCatchFile("prior-manipulation", priorFilePrefix),
//     d_prior_subj = readSubjFile("prior-manipulation", priorFilePrefix),
//     d_interpretation = readDataFile("prior-manipulation", interpretationFilePrefix),
//     d_interpretation_catch = readCatchFile("prior-manipulation", interpretationFilePrefix),
//     d_interpretation_subj = readSubjFile("prior-manipulation", interpretationFilePrefix);

var priorWorkeridsPassed = passCatchTrials(d_prior_catch),
    interpretationWorkeridsPassed = passCatchTrials(d_interpretation_catch),
    // endorsementWorkeridsPassed = passCatchTrials(d_endorsement_catch),
    priorWorkeridsEnglish = nativeEnglish(d_prior_subj),
    interpretationWorkeridsEnglish = nativeEnglish(d_interpretation_subj);
    // endorsementWorkeridsEnglish = nativeEnglish(d_endorsement_subj);

var data = {
	prior: filter(function(di){
    return ((priorWorkeridsPassed.indexOf(di.workerid) > -1) &&
      (priorWorkeridsEnglish.indexOf(di.workerid) > -1) &&
      utils.isNumber(di.response) &&
      di.trial_type == "prevalence_elicitation")
  }, map(function(d){ return extend(d, {
		avoided_endval: avoidEnds(d.response),
    binnedResponse:  utils.closest( midBins, d.response)
  })}, d_prior))
};


// var prevalence_levels = map(function(x){ utils.closest(midBins, x) }, [0.1,0.3,0.5,0.7,0.9])

// // // test that removing Ss who failed catch trial works properly (computed in R)
// assert.ok(levels(data.interpretation, "workerid").length == 107)
// assert.ok(levels(data.prior, "workerid").length == 131)
// assert.ok(levels(data.prior, "workerid").length == 126) // prior 3
assert.ok(levels(data.prior, "workerid").length == 175) // prior 3 n200
// assert.ok(levels(data.endorsement, "workerid").length == 150) // endorsement 1

//
var properties = levels(data.prior, "property");
var nullParams = {a:1, b:100}, nullDistribution = Beta(nullParams);
// properties

// var priors = _.fromPairs(map(function(p){
//   var property_data = _.filter(data.prior, {property: p})
//   return [p, map(function(b){ _.filter(property_data, {binnedResponse: b}).length + 1}, midBins)]
// }, properties))
//
// display(priors)
var marginalLikelihood = function(){

  foreach(properties, function(item){
    // display(item)
    var propertyData = {
        prior: _.filter(data.prior, {property: item})
    };

    var weights = normalize(repeat(numberOfComponents,
      function(){ return uniformDrift({a: 0, b: 1, width:0.2}) }
    ))

    var componentParameters = repeat(numberOfComponents,
     function(){
      return betaShape({
          g: uniformDrift({a: 0, b: 1, width: 0.2}),
					d: exponential({a: 1})
        })
    })

  	mapData({data: propertyData.prior}, function(d){
      var componentLogLikelihood = map2(function(w, params){
        Math.log(w) + Beta(params).score(d.avoided_endval)
      }, weights, componentParameters)
      var scr = util.logsumexp(componentLogLikelihood)
      scr == -Infinity ? displayObj(d) : null
  		factor(scr)
  	})

 })

}


// data.endorsement
var steps = 10
var samples = 1
var mll = AIS(marginalLikelihood, {steps:steps, samples: samples})

var semantics_print = semantics == "n_obs" ? semantics + n_obs : semantics

var resultsOutFile = 'results/genint/marginal_likelihood/ais-genint-wCost-'+modelName+
  "-" + semantics_print +'-flexPriors-steps'+steps +'-iter'+iter+'.json'

// // postOut
json.write(resultsOutFile, mll)
'results written to ' + resultsOutFile
